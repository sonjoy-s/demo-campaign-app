{"version":3,"sources":["App.js","index.js"],"names":["App","useState","campaigns","setCampaigns","name","setName","startDate","setStartDate","endDate","setEndDate","filter","data","length","campaign","includes","rangeStart","Date","rangeTo","useEffect","window","AddCampaigns","console","log","today","map","key","Math","random","toString","substring","budget","Budget","active","className","value","onChange","e","target","type","placeholder","cellSpacing","toFixed","colSpan","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNA4FeA,MAzFf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,EAAS,WACb,IAAIC,EAAO,GAIX,GAFAA,EAAQP,GAASA,EAAKQ,OAAS,EAAMV,EAAUQ,QAAO,SAAAG,GAAQ,OAAIA,EAAST,KAAKU,SAASV,MAAlF,YAA+FF,GAElGI,GAAaE,EAAS,CACxB,IAAIO,EAAa,IAAIC,KAAKV,GACtBW,EAAa,IAAID,KAAKR,GAE1BG,EAAOA,EAAKD,QAAO,SAAAG,GAAQ,OAAM,IAAIG,KAAKH,EAASP,WAAaS,GAAgB,IAAIC,KAAKH,EAASL,SAAWS,KAG/G,OAAON,GA4BT,OAzBAO,qBAAU,WAmBR,OANKC,OAAOC,cACVC,QAAQC,IAAI,wDAAyD,4BAGvEH,OAAOC,aAhBc,SAACT,GACpB,IAAIY,EAAQ,IAAIP,KAEhBb,EAAa,GAAD,mBAAKD,GAAL,YAAmBS,EAAKa,KAAI,SAAAX,GAKtC,OAJAA,EAASY,KAAUC,KAAKC,SAAW,GAAGC,SAAS,IAAIC,UAAU,GAC7DhB,EAASiB,OAASjB,EAASkB,QAAUlB,EAAS,YAAcA,EAAS,YAAcA,EAAS,WAC5FA,EAASmB,OAAW,IAAIhB,KAAKH,EAASP,WAAciB,GAAY,IAAIP,KAAKH,EAASL,SAAYe,EAEvFV,SAUJ,WACLQ,QAAQC,IAAI,oBACLH,OAAOC,iBAKhB,sBAAKa,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,uBAAOC,MAAO5B,EAAW6B,SAAU,SAACC,GAAD,OAAO7B,EAAa6B,EAAEC,OAAOH,QAAQI,KAAK,OAAOC,YAAY,eAChG,uBAAOL,MAAO1B,EAAS2B,SAAU,SAACC,GAAD,OAAO3B,EAAW2B,EAAEC,OAAOH,QAAQI,KAAK,OAAOC,YAAY,aAC5F,uBAAOD,KAAK,OAAOJ,MAAO9B,EAAM+B,SAAU,SAACC,GAAO/B,EAAQ+B,EAAEC,OAAOH,QAASK,YAAY,wBAG5F,wBAAOC,YAAY,IAAnB,UACE,gCACE,+BACE,sCACA,4CACA,0CACA,wCACA,6CAGJ,gCACI9B,IAASE,OAAS,EAAKF,IAASc,KAAI,SAAAX,GAAQ,OAC5C,+BACE,6BAAKA,EAAST,OACd,6BAAKS,EAASP,YACd,6BAAKO,EAASL,UACd,+BACE,sBAAMyB,UAAWpB,EAASmB,OAAS,SAAW,aAC7CnB,EAASmB,OAAS,SAAW,cAEhC,gCAAMnB,EAASiB,OAAS,KAAMW,QAAQ,GAAtC,aARO5B,EAASY,QAWlB,6BACE,oBAAIQ,UAAU,cAAcS,QAAQ,IAApC,sCC9EdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a784b0d9.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [campaigns, setCampaigns] = useState([]);\n  const [name, setName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  const filter = () => {\n    let data = [];\n\n    data = (name && (name.length > 1)) ? campaigns.filter(campaign => campaign.name.includes(name)) : [...campaigns];\n\n    if (startDate && endDate) {\n      let rangeStart = new Date(startDate);\n      let rangeTo    = new Date(endDate);\n\n      data = data.filter(campaign => ((new Date(campaign.startDate) > rangeStart) && (new Date(campaign.endDate )< rangeTo)));\n    }\n\n    return data;\n  };\n\n  useEffect(() => {\n    const addCampaigns = (data) => {\n      let today = new Date();\n\n      setCampaigns([...campaigns, ...data.map(campaign => {\n        campaign.key    = (Math.random() + 1).toString(36).substring(7);\n        campaign.budget = campaign.Budget || campaign['B udget'] || campaign[' Budget'] || campaign['Bu dget'];\n        campaign.active = ((new Date(campaign.startDate)) < today) && ((new Date(campaign.endDate)) > today);\n\n        return campaign;\n      })]);\n    };\n    \n    if (!window.AddCampaigns) {\n      console.log('%c[AddCampaigns method exposed for demo test purpose]', 'color:red;font-size:1rem');\n    }\n\n    window.AddCampaigns = addCampaigns;\n\n    return function() {\n      console.log('[cleared]');\n      delete window.AddCampaigns;\n    };\n  });\n\n  return (\n    <div className=\"container\">\n      <div className=\"search-container\">\n        <div className=\"row\">\n          <input value={startDate} onChange={(e) => setStartDate(e.target.value)} type=\"date\" placeholder=\"Start date\"/>\n          <input value={endDate} onChange={(e) => setEndDate(e.target.value)} type=\"date\" placeholder=\"End date\"/>\n          <input type=\"text\" value={name} onChange={(e) => {setName(e.target.value)}} placeholder=\"Search by name\" />\n        </div>\n      </div>\n      <table cellSpacing=\"0\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Start Date</th>\n            <th>End Date</th>\n            <th>Active</th>\n            <th>Budget</th>\n          </tr>\n        </thead>\n        <tbody>\n          {(filter().length > 0) ? filter().map(campaign => (\n            <tr key={campaign.key}>\n              <td>{campaign.name}</td>\n              <td>{campaign.startDate}</td>\n              <td>{campaign.endDate}</td>\n              <td>\n                <span className={campaign.active ? 'active' : 'inactive'}></span>\n                {campaign.active ? 'Active' : 'Inactive'}\n              </td>\n              <td>{(campaign.budget / 1000).toFixed(1)}k USD</td>\n            </tr>\n          )) : (\n            <tr>\n              <td className=\"text-center\" colSpan=\"5\">No data found</td>\n            </tr>\n          )}\n        </tbody>\n        \n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}